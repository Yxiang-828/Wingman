Looking at your folder structure and the cache system, here's EXACTLY what needs to be abolished:

## **FILES TO DELETE COMPLETELY**
1. useCalendar.ts - **ENTIRE CACHE SYSTEM**
2. All cache-related code in DataContext.tsx (broadcaster, cache updates)

## **COMPONENTS TO MODIFY**
1. **DayView.tsx** - Remove `useCalendarCache`, directly call SQLite
2. **WeekView.tsx** - Remove cache logic, direct SQLite calls  
3. **MiniCalendar.tsx** - Remove cache optimization, direct SQLite
4. **Dashboard components** (TasksCard, EventsCard, SummaryCard) - Direct SQLite
5. **VirtualizedList.tsx** - Remove cache-aware virtualization

## **CONTEXT CHANGES**
1. **DataContext.tsx** - Remove broadcaster, cache subscriptions, just keep CRUD + SQLite calls
2. **NotificationsContext.tsx** - Direct SQLite for real-time counts

## **DATABASE CHANGES**
1. **LocalDataManager.ts** - Add pagination (LIMIT/OFFSET)
2. **preload.js** - Add count methods, pagination methods
3. **main.js** - Add count IPC handlers

## **NEW ARCHITECTURE**
```
OLD: Component -> useCalendarCache -> DataContext -> SQLite
NEW: Component -> DataContext -> SQLite (direct)
```

## **CRITICAL POINTS**
- **MiniCalendar**: Instead of loading 30 days into cache, make 30 individual SQLite calls for counts only
- **DayView**: Direct `window.electronAPI.db.getTasks(userId, date)` calls
- **WeekView**: 7 direct SQLite calls instead of cache layer
- **Dashboard**: Direct SQLite calls with proper LIMIT clauses

The cache system is spread across 5+ files and adds zero value since SQLite IS your cache. You're essentially caching a cache.