/**
 * Database type definitions that exactly match your Supabase schema
 */

// UUID type
export type UUID = string;

// Timestamp type (ISO string)
export type Timestamp = string;

// Common mood enum
export type MoodScale = 'happy' | 'neutral' | 'sad' | 'excited' | 'tired';

/**
 * Users table
 */
export interface DBUser {
  id: UUID;
  name: string;
  email: string;
  password: string;
  created_at: Timestamp;
  updated_at: Timestamp;
}

/**
 * User settings table
 */
export interface DBUserSetting {
  id: number;
  user_id: UUID;
  setting_key: string;
  setting_value: string;
}

/**
 * Calendar events table
 */
export interface DBCalendarEvent {
  id: number;
  user_id: UUID;
  title: string;
  event_date: string; // ISO format YYYY-MM-DD
  event_time: string; // Format HH:MM:SS
  type: string;
  description: string | null;
  created_at: Timestamp;
  updated_at: Timestamp;
}

/**
 * Tasks table
 */
export interface DBTask {
  id: number;
  user_id: UUID;
  text: string;
  task_date: string; // ISO format YYYY-MM-DD
  task_time: string | null; // Format HH:MM:SS
  completed: boolean;
  created_at: Timestamp;
  updated_at: Timestamp;
}

/**
 * Diary entries table
 */
export interface DBDiaryEntry {
  id: number;
  user_id: UUID;
  entry_date: string; // ISO format YYYY-MM-DD
  title: string;
  content: string;
  mood: MoodScale;
  created_at: Timestamp;
  updated_at: Timestamp;
}

/**
 * Chat sessions table
 */
export interface DBChatSession {
  id: number;
  user_id: UUID;
  title: string | null;
  started_at: Timestamp;
  updated_at: Timestamp;
}

/**
 * Chat messages table
 */
export interface DBChatMessage {
  id: number;
  session_id: number;
  is_ai: boolean;
  message: string;
  timestamp: Timestamp;
  updated_at: Timestamp;
}

/**
 * Chat history table (legacy/separate table)
 */
export interface DBChatHistory {
  id: number;
  user_id: UUID;
  message: string;
  timestamp: Timestamp;
  is_ai: boolean;
}

/**
 * Utility functions for date/time conversions
 */

/**
 * Converts a JavaScript Date to YYYY-MM-DD format for database
 */
export function formatDateForDB(date: Date): string {
  return date.toISOString().split('T')[0];
}

/**
 * Converts a JavaScript Date to HH:MM:SS format for database
 */
export function formatTimeForDB(date: Date): string {
  return date.toISOString().split('T')[1].split('.')[0];
}

/**
 * Parse a database date (YYYY-MM-DD) and time (HH:MM:SS) to JavaScript Date
 */
export function parseDateAndTimeFromDB(dateStr: string, timeStr?: string | null): Date {
  if (timeStr) {
    return new Date(`${dateStr}T${timeStr}`);
  }
  return new Date(`${dateStr}T00:00:00`);
}

/**
 * Creates a new UUID (client-side only, for testing)
 * In production, UUIDs should be generated by Supabase
 */
export function generateClientUUID(): UUID {
  // Simple UUID v4 generation (for testing only)
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
    const r = Math.random() * 16 | 0;
    const v = c === 'x' ? r : (r & 0x3 | 0x8);
    return v.toString(16);
  });
}

// Type aliases for readability
export type Task = DBTask;
export type CalendarEvent = DBCalendarEvent;
export type DiaryEntry = DBDiaryEntry;
export type User = DBUser;
export type UserSetting = DBUserSetting;
export type ChatSession = DBChatSession;
export type ChatMessage = DBChatMessage;
export type ChatHistory = DBChatHistory;