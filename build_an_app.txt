# Building the Wingman Application

Here's a step-by-step guide to build and package the Wingman application:

## Prerequisites

1. **Install Required Tools**
   - Node.js 18+ and npm
   - Python 3.13+
   - Git

## Setup Environment

1. **Clone the repository and navigate to project directory**
   ```bash
   git clone https://github.com/your-username/wingman.git
   cd wingman
   ```

2. **Set up environment variables**
   - Create .env file in the root directory
   - Create .env file in the Wingman-backend directory
   - Add your Supabase credentials to both:
     ```
     VITE_SUPABASE_URL=your_supabase_url
     VITE_SUPABASE_KEY=your_supabase_key
     ```

3. **Run the setup script**
   ```bash
   .\setup-env.bat
   ```
   This will:
   - Create Python virtual environment
   - Install Python dependencies
   - Install npm dependencies

## Build Process

### Option 1: Using Build Script

Simply run the all-in-one build script:

```bash
.\build.bat
```

This automatically:
1. Checks for environment files
2. Sets up the Python environment
3. Builds the frontend application
4. Packages the application for Windows
5. Produces an installer in the `dist_electron` directory

### Option 2: Manual Build Process

If you prefer step-by-step:

1. **Build the frontend**
   ```bash
   npm run build
   ```

2. **Package for Windows**
   ```bash
   npm run electron:build:win
   ```

   For macOS:
   ```bash
   npm run electron:build:mac
   ```

   For Linux:
   ```bash
   npm run electron:build:linux
   ```

   For all platforms:
   ```bash
   npm run package:all
   ```

## Troubleshooting

If you encounter dependency issues with Supabase:

```bash
.\fix-dependencies.bat
```

If the backend doesn't start properly:
1. Activate the virtual environment
   ```bash
   cd Wingman-backend
   .\.venv\Scripts\activate
   ```
2. Install dependencies manually
   ```bash
   pip install -r requirements.txt
   ```

## Distribution

After successful build, find your packaged application in:
- `dist_electron` directory

The Windows installer (.exe) can be shared with users who can then install the application on their computers.

## Development Testing

To test the full application in development mode:
```bash
npm run dev:full
```

This will start both the backend and frontend in development mode.